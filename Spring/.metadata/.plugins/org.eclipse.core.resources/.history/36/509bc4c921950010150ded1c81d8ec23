package com.ferkan.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;

import com.ferkan.jwt.JwtAuthhenticationFilter; // Not: Sınıf adınız "JwtAuthenticationFilter" olmalı, dosya adını/ismi kontrol edin.

@Configuration
@EnableWebSecurity
public class SecurityConfig {

    public static final String AUTHENTICATE = "/authentication";
    public static final String REGISTER      = "/register";

    private final AuthenticationProvider authenticationProvider;
    private final JwtAuthhenticationFilter jwtAuthhenticationFilter;

    public SecurityConfig(AuthenticationProvider authenticationProvider,
                          JwtAuthhenticationFilter jwtAuthhenticationFilter) {
        this.authenticationProvider = authenticationProvider;
        this.jwtAuthhenticationFilter = jwtAuthhenticationFilter;
    }

    @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        http
            // JWT ile stateless mimari
            .csrf(csrf -> csrf.disable())
            .sessionManagement(sm -> sm.sessionCreationPolicy(SessionCreationPolicy.STATELESS))

            // Yetkilendirme kuralları
            .authorizeHttpRequests(auth -> auth
                .requestMatchers(AUTHENTICATE, REGISTER, "/public/**").permitAll()
                .anyRequest().authenticated()
            )

            // AuthenticationProvider zincire ekleniyor
            .authenticationProvider(authenticationProvider)

            // JWT filtresi UsernamePasswordAuthenticationFilter'dan önce çalışmalı
            .addFilterBefore(jwtAuthhenticationFilter, UsernamePasswordAuthenticationFilter.class);

        return http.build();
    }
}
